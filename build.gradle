buildscript {
    repositories {
        maven { url = "https://files.minecraftforge.net/maven" } //maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

// version = '1.0'
version = "${minecraft_version}-${modVersion}-${buildVersion}"
group = "net.DancerVLT69" //"net.DancerVLT69.${modId}"
archivesBaseName = "${modId}"

//java.toolchain.languageVersion = JavaLanguageVersion.of(8)
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = "1.8"

minecraft {
    mappings channel: 'official', version: '1.16.5' //'snapshot'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                jmsr_forge {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                jmsr_forge {
                    source sourceSets.main
                }
            }
        }
		
		data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be changed as needed.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'jmsr_forge', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                jmsr_forge {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.35'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.modName,
                "Specification-Vendor"    : "DancerVLT69",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.modName,
                "Implementation-Version"  : project.modVersion,
                "Implementation-Vendor"   : "DancerVLT69",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// apply from: 'mcreator.gradle'

